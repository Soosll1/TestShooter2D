//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerHUD;

    public static Entitas.IMatcher<GameEntity> PlayerHUD {
        get {
            if (_matcherPlayerHUD == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerHUD);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerHUD = matcher;
            }

            return _matcherPlayerHUD;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Gameplay.Features.UI.PlayerHUDComponent playerHUD { get { return (Gameplay.Features.UI.PlayerHUDComponent)GetComponent(GameComponentsLookup.PlayerHUD); } }
    public Gameplay.Features.UI.Behaviours.PlayerHUD PlayerHUD { get { return playerHUD.Value; } }
    public bool hasPlayerHUD { get { return HasComponent(GameComponentsLookup.PlayerHUD); } }

    public GameEntity AddPlayerHUD(Gameplay.Features.UI.Behaviours.PlayerHUD newValue) {
        var index = GameComponentsLookup.PlayerHUD;
        var component = (Gameplay.Features.UI.PlayerHUDComponent)CreateComponent(index, typeof(Gameplay.Features.UI.PlayerHUDComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplacePlayerHUD(Gameplay.Features.UI.Behaviours.PlayerHUD newValue) {
        var index = GameComponentsLookup.PlayerHUD;
        var component = (Gameplay.Features.UI.PlayerHUDComponent)CreateComponent(index, typeof(Gameplay.Features.UI.PlayerHUDComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemovePlayerHUD() {
        RemoveComponent(GameComponentsLookup.PlayerHUD);
        return this;
    }
}
