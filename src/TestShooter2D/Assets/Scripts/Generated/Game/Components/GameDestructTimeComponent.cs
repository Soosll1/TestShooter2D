//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDestructTime;

    public static Entitas.IMatcher<GameEntity> DestructTime {
        get {
            if (_matcherDestructTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DestructTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDestructTime = matcher;
            }

            return _matcherDestructTime;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Common.DestructTime destructTime { get { return (Common.DestructTime)GetComponent(GameComponentsLookup.DestructTime); } }
    public float DestructTime { get { return destructTime.Value; } }
    public bool hasDestructTime { get { return HasComponent(GameComponentsLookup.DestructTime); } }

    public GameEntity AddDestructTime(float newValue) {
        var index = GameComponentsLookup.DestructTime;
        var component = (Common.DestructTime)CreateComponent(index, typeof(Common.DestructTime));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceDestructTime(float newValue) {
        var index = GameComponentsLookup.DestructTime;
        var component = (Common.DestructTime)CreateComponent(index, typeof(Common.DestructTime));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveDestructTime() {
        RemoveComponent(GameComponentsLookup.DestructTime);
        return this;
    }
}
